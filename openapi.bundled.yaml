openapi: 3.0.3
info:
  title: TempoGeoPolitical Map RESTful API
  version: 0.0.1
servers:
  - url: 'https://template.com'
    description: Localhost
security:
  - JWT: [ ]
tags:
  - name: Events
    description: Historical Political Events APIs
paths:
  /v1/events:
    get:
      summary: List of Historical Political Events.
      tags:
        - Events
      parameters:
        - $ref: '#/components/parameters/Accept'
      security:
        - JWT: [ ]
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResponseBody'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'
        default:
          description: Unsuccessful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorObject'
components:
  schemas:
    EventType:
      type: string
      description: Type of an Event.
      enum:
        - WARFARE_AND_ARMED_CONFLICTS
    EventTypeList:
      type: array
      description: List of Event Types to filter Events.
      items:
        $ref: '#/components/schemas/EventType'
      maxItems: 1000
    WikidataId:
      type: string
      description: 'Record ID of a data item in https://www.wikidata.org.'
      example: Q178810
    EventName:
      type: string
      description: Name of a historical political Event.
      example: Syrian Civil War
    Region:
      type: string
      description: World Region.
      enum:
        - east_asia_and_pacific
        - europe_and_central_asia
        - latin_america_and_caribbean
        - middle_east_and_north_africa
        - north_america
        - south_asia
        - sub_saharan_africa
    RegionList:
      type: array
      description: List of World Regions to filter Events.
      items:
        $ref: '#/components/schemas/Region'
      maxItems: 10
    CountryCode:
      type: string
      description: Country Codes.
    CountryCodeList:
      type: array
      description: List of Country Codes to filter Events.
      items:
        $ref: '#/components/schemas/CountryCode'
      maxItems: 250
    Country:
      type: object
      description: Information about a Country related to the Event.
      properties:
        wikidataId:
          allOf:
            - $ref: '#/components/schemas/WikidataId'
            - example: Q858
        name:
          type: string
          example: Syria
    CountryList:
      type: array
      description: List of Countries related to the Event.
      items:
        $ref: '#/components/schemas/Country'
      maxItems: 200
    Location:
      type: object
      description: Information about a Location related to the Event.
      properties:
        wikidataId:
          allOf:
            - $ref: '#/components/schemas/WikidataId'
            - example: Q858
        name:
          type: string
          example: Syria
        coodrinate:
          type: string
          example: '39.3112722,-102.2917972'
    LocationList:
      type: array
      description: List of Locations related to the Event.
      items:
        $ref: '#/components/schemas/Location'
      maxItems: 200
    DateTime:
      type: string
      description: 'Event timestamp; can be time or date, as well as month or year.'
      format: dateTime
    Event:
      type: object
      description: Historical political Event.
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/EventType'
            - example: WARFARE_AND_ARMED_CONFLICTS
        wikidataId:
          allOf:
            - $ref: '#/components/schemas/WikidataId'
        name:
          $ref: '#/components/schemas/EventName'
        countries:
          allOf:
            - $ref: '#/components/schemas/CountryList'
            - example:
                - wikidataId: Q858
                  name: Syria
        locations:
          allOf:
            - $ref: '#/components/schemas/LocationList'
            - example:
                - wikidataId: Q858
                  name: Syria
                  coodrinate: '39.3112722,-102.2917972'
        timeStateRelativeToNow:
          allOf:
            - type: string
              description: 'Indicates wherether event is in past, happens now or will occur in future.'
              enum:
                - PAST
                - ONGOING
                - FUTURE
            - example: ONGOING
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - example: 2011-03-15T00:00:00.000Z
        endTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - example: null
      required:
        - type
        - wikidataId
        - name
        - countries
        - timeStateRelativeToNow
        - startTime
    EventResponseBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Event'
    EventListResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          maxItems: 10000
    BasicErrorObject:
      type: object
      properties:
        id:
          type: string
          example: a1
        code:
          type: integer
          description: 'An application-specific error code, expressed as a string value.'
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        source:
          type: string
          description: An object containing references to the source of the error.
    Error400:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 400
            title:
              example: Bad request
    Error401:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 401
            title:
              example: Unauthorized
    Error403:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 403
            title:
              example: Forbidden
    Error404:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 404
            title:
              example: Not Found
    Error406:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 406
            title:
              example: Not Acceptable
    Error409:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 409
            title:
              example: Conflict
    Error422:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 422
            title:
              example: Unprocessable entity
    Error429:
      allOf:
        - $ref: '#/components/schemas/BasicErrorObject'
        - type: object
          properties:
            status:
              example: 429
            title:
              example: Too many requests
  parameters:
    Accept:
      name: Accept
      in: header
      description: Default accept header
      required: false
      schema:
        type: string
      example: application/json
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Access Token
    JWTRefresh:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Refresh Token

